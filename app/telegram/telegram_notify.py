import requests
from datetime import datetime
from app.telegram.config_notify import notify_settings
from sqlalchemy.orm import Session
from app.db import SessionLocal
from app.models.subscriber import Subscriber

class TelegramNotifier:
    def __init__(self, token: str):
        self.token = token
        self.api_url = f"https://api.telegram.org/bot{self.token}/sendMessage"
    

    def send(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –≤ Telegram"""
        db: Session = SessionLocal()
        try:
            subscribers = db.query(Subscriber).all()
            for sub in subscribers:
                try:
                    requests.post(self.api_url, data={
                        'chat_id': sub.chat_id,
                        'text': message,
                        'parse_mode': 'HTML'
                    })
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {sub.chat_id}: {e}")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–∫–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:", e)
        finally:
            db.close()

    def format_items(self, items):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤"""
        lines = []
        total_sum = 0
        for item in items:
            subtotal = item["qty"] * item["price"]
            total_sum += subtotal
            lines.append(f"‚Ä¢ {item['name']} √ó {item['qty']} —à—Ç. = {subtotal} ‚Ç∏")
        lines.append(f"\nüí∞ –ò—Ç–æ–≥–æ: {total_sum} ‚Ç∏")
        return "\n".join(lines)

    def notify_order_created(self, order_id, customer_name, phone, comment, items):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞"""
        date_str = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        msg = [
            f"üÜï <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order_id}</b>",
            f"üìÖ {date_str}",
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {customer_name}",
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone or '‚Äî'}"
        ]
        if comment:
            msg.append(f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")
        msg.append("\nüì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n" + self.format_items(items))
        self.send("\n".join(msg))

    def notify_order_status_changed(self, order_id, new_status, items):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        msg = [
            f"‚ö° <b>–ó–∞–∫–∞–∑ #{order_id}</b>",
            f"üìå –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}",
            "\nüì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n" + self.format_items(items)
        ]
        self.send("\n".join(msg))


# –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
notifier = TelegramNotifier(
    token=notify_settings.TELEGRAM_TOKEN
)

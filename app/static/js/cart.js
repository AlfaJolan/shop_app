// static/js/cart.js
// ====================================
// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—ã "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö —á–µ—Ä–µ–∑ fetch.
// –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—É–º–º—É –≤ —à–∞–ø–∫–µ (#cart-count –∏ #cart-sum).

document.addEventListener("DOMContentLoaded", () => {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    const forms = document.querySelectorAll("form.cart-add-form");
  
    forms.forEach((form) => {
      form.addEventListener("submit", async (e) => {
        e.preventDefault(); // –±–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
  
        try {
          const formData = new FormData(form);
  
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ fetch
          const resp = await fetch(form.action, {
            method: form.method,
            body: formData,
            headers: {
              Accept: "application/json", // ‚ö° –≥–æ–≤–æ—Ä–∏–º —Å–µ—Ä–≤–µ—Ä—É, —á—Ç–æ —Ö–æ—Ç–∏–º JSON
            },
          });
  
          if (!resp.ok) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", resp.status);
            return;
          }
  
          const data = await resp.json();
  
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—É–º–º—É –≤ —à–∞–ø–∫–µ
          const countEl = document.getElementById("cart-count");
          const sumEl = document.getElementById("cart-sum");
  
          if (countEl) countEl.textContent = data.total_items ?? 0;
          if (sumEl) sumEl.textContent = data.total_sum ?? 0;
        } catch (err) {
          console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", err);
        }
      });
    });
  
    // üîπ –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
    document.querySelectorAll("form.cart-update-form").forEach((form) => {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
  
        try {
          const formData = new FormData(form);
          const resp = await fetch(form.action, {
            method: form.method,
            body: formData,
            headers: { Accept: "application/json" },
          });
  
          if (!resp.ok) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã", resp.status);
            return;
          }
  
          const data = await resp.json();
  
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—É–º–º—É –≤ —à–∞–ø–∫–µ
          const countEl = document.getElementById("cart-count");
          const sumEl = document.getElementById("cart-sum");
          if (countEl) countEl.textContent = data.total_items ?? 0;
          if (sumEl) sumEl.textContent = data.total_sum ?? 0;
  
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ –∫–∞—Ä—Ç–æ—á–∫—É
          if (data.updated) {
            const row = document.querySelector(
              `[data-variant-id="${data.updated.variant_id}"]`
            );
            if (row) {
              const lineTotalEl = row.querySelector(".line-total");
              if (lineTotalEl) {
                lineTotalEl.textContent = data.updated.line_total.toFixed(2) + " ‚Ç∏";
              }
              const qtyInput = row.querySelector('input[name="qty"]');
              if (qtyInput) qtyInput.value = data.updated.qty;
            }
          }
  
          // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ
          const totalEl = document.getElementById("cart-total");
          const totalMobile = document.getElementById("cart-total-mobile");
          if (totalEl) totalEl.textContent = data.total_sum.toFixed(2) + " ‚Ç∏";
          if (totalMobile)
            totalMobile.textContent = "–ò—Ç–æ–≥–æ: " + data.total_sum.toFixed(2) + " ‚Ç∏";
        } catch (err) {
          console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", err);
        }
      });
    });
  
    // üîπ –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—ã —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    document.querySelectorAll("form.cart-remove-form").forEach((form) => {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
  
        try {
          const formData = new FormData(form);
          const resp = await fetch(form.action, {
            method: form.method,
            body: formData,
            headers: { Accept: "application/json" },
          });
  
          if (!resp.ok) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", resp.status);
            return;
          }
  
          const data = await resp.json();
  
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—É–º–º—É –≤ —à–∞–ø–∫–µ
          const countEl = document.getElementById("cart-count");
          const sumEl = document.getElementById("cart-sum");
          if (countEl) countEl.textContent = data.total_items ?? 0;
          if (sumEl) sumEl.textContent = data.total_sum ?? 0;
  
          // –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ DOM
          if (data.removed_variant) {
            document
              .querySelectorAll(`[data-variant-id="${data.removed_variant}"]`)
              .forEach((el) => el.remove());
          }
  
          // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ
          const totalEl = document.getElementById("cart-total");
          const totalMobile = document.getElementById("cart-total-mobile");
          if (totalEl) totalEl.textContent = data.total_sum.toFixed(2) + " ‚Ç∏";
          if (totalMobile)
            totalMobile.textContent = "–ò—Ç–æ–≥–æ: " + data.total_sum.toFixed(2) + " ‚Ç∏";
  
          // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
          if (data.total_items === 0) {
            const cartBody = document.getElementById("cart-body");
            const cartList = document.getElementById("cart-list");
            if (cartBody) cartBody.innerHTML = "";
            if (cartList) cartList.innerHTML = "";
            const emptyMsg = document.getElementById("empty-cart");
            if (emptyMsg) {
              emptyMsg.style.display = "block";
            } else {
              const p = document.createElement("p");
              p.id = "empty-cart";
              p.innerHTML =
                '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. <a href="/" class="link-primary">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥</a>';
              document.querySelector("main .container").prepend(p);
            }
          }
        } catch (err) {
          console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", err);
        }
      });
    });
  });
  